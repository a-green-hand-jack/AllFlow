[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "allflow"
version = "0.1.0"
description = "A PyTorch library for efficient Flow Matching algorithms"
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">=3.9"
authors = [
    {name = "AllFlow Contributors"},
]
keywords = [
    "flow-matching",
    "generative-modeling", 
    "pytorch",
    "optimal-transport",
    "continuous-normalizing-flows",
    "machine-learning"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    "torch>=2.0.0",
    "torchdiffeq>=0.2.0",
    "typing-extensions>=4.5.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-benchmark>=4.0.0",
    "hypothesis>=6.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0", 
    "pytest-benchmark>=4.0.0",
    "hypothesis>=6.0.0",
]
docs = [
    "sphinx>=6.0.0",
    "sphinx-rtd-theme>=1.3.0",
    "myst-parser>=2.0.0",
]
examples = [
    "jupyter>=1.0.0",
    "matplotlib>=3.6.0",
    "seaborn>=0.12.0",
]
ot = [
    "pot>=0.9.0",  # For OT-Flow algorithms
]
sde = [
    "torchsde>=0.2.0",  # For stochastic differential equations
]
all = [
    "pot>=0.9.0",
    "torchsde>=0.2.0",
    "jupyter>=1.0.0",
    "matplotlib>=3.6.0",
    "seaborn>=0.12.0",
]

[project.urls]
Homepage = "https://github.com/your-username/allflow"
Repository = "https://github.com/your-username/allflow.git"
Documentation = "https://allflow.readthedocs.io/"
"Bug Tracker" = "https://github.com/your-username/allflow/issues"

[tool.hatch.build.targets.wheel]
packages = ["src/allflow"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests", 
    "/docs",
    "/notebooks",
    "/README.md",
    "/LICENSE",
    "/pyproject.toml",
]

# 测试配置
[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = [
    "--strict-markers",
    "--strict-config", 
    "--cov=src/allflow",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=85",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "gpu: marks tests that require GPU (deselect with '-m \"not gpu\"')",
    "benchmark: marks performance benchmark tests",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

# 代码格式化
[tool.black]
line-length = 88
target-version = ["py39", "py310", "py311", "py312"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # 排除一些特定目录
  \.eggs
  | \.git
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

# 代码检查
[tool.ruff]
target-version = "py39"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings  
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    "N",  # pep8-naming
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["S101"]

# 类型检查
[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "torch.*",
    "matplotlib.*",
    "seaborn.*",
]
ignore_missing_imports = true

# 覆盖率配置
[tool.coverage.run]
source = ["src/allflow"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
] 